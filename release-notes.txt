### Release v2.6

### New Features

* BIDIRCPU can now use PhotonGI caustic cache to render SDS paths
* Optimized the parsing of mesh light sources and it is now about 3x faster
* Introduced (partial) multi-thread support in pre-processing of Light sources
* Integrated OpenColorIO v2.0
* Added the support for new TONEMAP_OPENCOLORIO tone mapper
* Added the support for color spaces (Nop, LuxCore and OpenColorIO) to image maps
* Added the support for color spaces (Nop, LuxCore and OpenColorIO) to constant textures
* Added the support for color spaces (Nop, LuxCore and OpenColorIO) to implicit definitions of constant textures
* Added the support for color spaces (Nop, LuxCore and OpenColorIO) to materials
* Added the support for color spaces (Nop, LuxCore and OpenColorIO) to light sources
* FILESAVER avoids to save the internal random image map (used by randomized tiling)
* Updated to Intel Embree v3.12.2
* Updated to Intel OIDN v1.3.0
* Updated to OpenImageIO v2.2.13.1
* Regularize coordinate system to solve some anisotropic related issue with glossy material (pull request #521)

### Fixed Bugs

* Fixed the reading of IES files on system with not-US locale
* Fixed a problem with Python and Property objects initialized as double even if they were int
* Python Property object now consider int data type always as a 64 bit value

Check https://wiki.luxcorerender.org/LuxCoreRender_Release_Notes for the full list
of release notes.

### Known Problems and limitations

* accelerator.bvh.builder.type = EMBREE_MORTON doesn't work with the latest Embree
* Python crashes when calling sys.exit()
* TILEPATHOCL (and RTPATHOCL) count the layers of transparent surfaces as an iteration of the rendering finite state machine so they require to increase the max. path depth to avoid black regions.
* Light emitted by motion blurred triangle lights is approximated using the triangle area of time 0.0 (computing triangle area at runtime would be expansive) so it may be not totally accurate if the motion blur transformation include a scale.

**Note for Windows users:** you have to install the [Microsoft Visual C++ Redistributable
for Visual Studio 2017](https://aka.ms/vs/15/release/vc_redist.x64.exe) and
[Intel C++ redistributable](https://software.intel.com/sites/default/files/managed/59/aa/ww_icl_redist_msi_2018.3.210.zip).
